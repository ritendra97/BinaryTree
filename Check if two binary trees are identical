//Check if two binary trees are identical

// This below code is wrong just to get remember what mistake yoou have done aadha Euler chlega
class Node
{
	int data;
	Node left;
	Node right;
	Node(int data)
	{
		this.data=data;
		this.left=null;
		this.right=null;
	}
}
public class BinaryTree 
{
	Node root1,root2;

	boolean isIdentical(Node root1, Node root2)
	{
	    if(root1==null && root2==null)
	    {
	        return true;
	    }
	    if(root1==null || root2==null)
	    {
	        return false;
	    }
	    if(root1.data!=root2.data)
	    {
	        return false;
	    }
	    boolean l_n = isIdentical(root1.left,root2.left);
	    if(l_n)
	    {
	        return true;
	    }
	    boolean r_n = isIdentical(root1.right,root2.right);
	    if(r_n)
	    {
	        return true;
	    }
	    return false;
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		BinaryTree tree =new BinaryTree();
		tree.root1 = new Node(1);
		tree.root1.left = new Node(2);
		tree.root1.right = new Node(3);
		tree.root1.right.left = new Node(4);
		tree.root2 = new Node(1);
		tree.root2.left = new Node(2);
		tree.root2.right = new Node(3);
		System.out.println(tree.isIdentical(tree.root1,tree.root2));
	}

}
// This below code is right

	boolean isIdentical(Node root1, Node root2)
	{
	    if(root1==null && root2==null)
	    {
	        return true;
	    }
	    if(root1==null || root2==null)
	    {
	        return false;
	    }
	    return (root1.data==root2.data) && isIdentical(root1.left,root2.left) && isIdentical(root1.right,root2.right);
	     
	}
