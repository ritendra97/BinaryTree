//Inorder Tree Traversal without recursion and without stack!
import java.util.*;
class Node
{
	int data;
	Node left;
	Node right;
	Node(int data)
	{
		this.data=data;
		this.left=null;
		this.right=null;
	}
}
public class BinaryTree 
{
	static Node root;
	static void MorrisTraversal(Node root)
    {
		if(root==null)
			return;
		Node curr = root;
		while(curr!=null)
		{
			if(curr.left==null) 
			{
				System.out.print(curr.data+" ");
				curr=curr.right;
			}
			else
			{
				Node predecessor = curr.left;
				while(predecessor.right!=null && predecessor.right!=curr)
				{
					predecessor =predecessor.right;
				}
				if(predecessor.right==null)
				{
					predecessor.right=curr;
					curr=curr.left;
				}
				else
				{
					predecessor.right=null;
					System.out.print(curr.data+" ");
					curr=curr.right;
				}
			}
		}
		
    }	
	public static void main(String[] args) 
	{
		root = new Node(1);
        root.left = new Node(2);
        root.right = new Node(3);
        root.left.left = new Node(4);
        root.left.right = new Node(5);
        MorrisTraversal(root);
	}
}
