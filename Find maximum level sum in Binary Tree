//Find maximum level sum in Binary Tree
import java.util.*;
class Node  
{ 
    int data; 
    Node left, right; 
  
    public Node(int data) 
    { 
        this.data = data; 
        this.left = this.right = null; 
    } 
}
public class BinaryTree 
{
	static int size=0;
	static int maxsum=0;
	static int sum=0;
	static int height=0;
	static void answer(Node node)
	{	
		Queue<Node> q = new LinkedList<>();
		q.add(node);
		while(true)
		{
			size=q.size();
			if(size==0)
				break;
			height++;
			while(size>0)
			{
				Node temp = q.remove();
				sum=sum+temp.data;
				if(temp.left!=null)
					q.add(temp.left);
				if(temp.right!=null)
					q.add(temp.right);
				size--;
			}
			if(sum>maxsum)
				maxsum=sum;
			System.out.println("The sum for "+height+" is: "+sum);
			sum=0;
		}
	}
	public static void main(String[] args) 
	{
		Node root = new Node(1); 
	    root.left = new Node(2); 
	    root.right = new Node(3); 
	    root.left.left = new Node(4); 
	    root.left.right = new Node(5); 
	    root.right.right = new Node(8); 
	    root.right.right.left = new Node(6); 
	    root.right.right.right = new Node(7);
	    answer(root);
	}
}
