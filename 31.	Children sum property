import java.util.*;
//Connect nodes at same level
class BinaryNode 
{ 	  
   int data;
   BinaryNode left, right; 
   BinaryNode(int i) 
   { 
      data = i; 
      left = right = null; 
   }
}
public class BinaryTree 
{
	static BinaryNode root;
	public static boolean checksumproperty(BinaryNode node)
	{
		if(node==null || (node.left==null && node.right==null))
			return true;
		int l = node.left!=null?node.left.data:0;
		int r = node.right!=null?node.right.data:0;
		
		if(node.data!=l+r)
			return false;
		
		boolean ls = checksumproperty(node.left);
		boolean rs = checksumproperty(node.right);
		if(ls==true && rs==true)
			return true;
		else if(ls==false && rs==true)
			return false;
		else if (ls==true && rs==false)
			return false;
		return false;
	}
	public static void main(String[] args) 
	{
		root = new BinaryNode(20);
		root.left = new BinaryNode(10);
		root.right = new BinaryNode(10);
		root.left.left = new BinaryNode(5);
		root.left.right = new BinaryNode(5);
		root.right.right = new BinaryNode(10);
		System.out.println(checksumproperty(root));
    }
}
/// new one
class Node{

    int data;
    Node left;
    Node right;
    Node(int data){
        this.data=data;
    }
}

public class BinaryTree {

	public static int min_h(Node node) {

		if (node == null)
			return 0;

		if (node.left == null && node.right == null)
			return node.data;

		int l = min_h(node.left);
		int r = min_h(node.right);

		if (l + r == node.data)
			return node.data;

		return 0;
	}

	public static void main(String[] args) {

	       Node root = new Node(10);
	       root.left = new Node(8);
	       root.right = new Node(2);
	       root.right.left = new Node(2);
	       root.left.left = new Node(3);
	       root.left.right = new Node(5);
	       root.right.right = new Node(2);
	       
	       int ans = min_h(root);

	       if(ans==0){
	          System.out.println(false);
	       }else{
	          System.out.println(true);
	       }
	}
}

import java.util.*;
class BinaryNode
{
	int data;
	BinaryNode left;
	BinaryNode right;
	BinaryNode(int data)
	{
		this.data=data;
		this.left=null;
		this.right=null;
	}
}
public class BinaryTree 
{
	static BinaryNode root;
	public static boolean checksumproperty(BinaryNode node)
	{
		if(node==null || (node.left==null && node.right==null))
				return true;
		int left_data = node.left!=null?node.left.data:0;
		int right_data = node.right!=null?node.right.data:0;
		if((node.data==left_data+right_data) && checksumproperty(node.left) && checksumproperty(node.right))
			return true;
		return false;
	}
	public static void main(String[] args) 
	{
		root = new BinaryNode(10);
		root.left = new BinaryNode(8);
		root.right = new BinaryNode(2);
		root.left.left = new BinaryNode(3);
		root.left.right = new BinaryNode(5);
		root.right.right = new BinaryNode(2);
		System.out.println(checksumproperty(root));
	}
}
