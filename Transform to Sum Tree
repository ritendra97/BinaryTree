Transform to Sum Tree

class Node
{
	int data;
	Node left;
	Node right;
	Node(int data)
	{
		this.data=data;
		this.left=null;
		this.right=null;
	}
}
public class BinaryTree 
{
	Node root;
	int isSumTreeUtil(Node root)
	{
		if(root==null)
			return 0;
		int l_s = isSumTreeUtil(root.left);
		int r_s = isSumTreeUtil(root.right);
		int ts = l_s+r_s+root.data;
		root.data=l_s+r_s;
		return ts;
	}
	void isSumTree(Node root)
	{
		isSumTreeUtil(root);
		inOrder(root);
	}
	void inOrder(Node node) 
    { 
        if (node == null) 
            return; 
  
        inOrder(node.left); 
        System.out.print(node.data + " "); 
  
        inOrder(node.right); 
    }
	public static void main(String[] args) 
	{
		BinaryTree tree = new BinaryTree();
        tree.root = new Node(10);
        tree.root.left = new Node(20);
        tree.root.right = new Node(30);
        tree.root.left.left = new Node(10);
        tree.root.left.right = new Node(10);
        tree.isSumTree(tree.root);
	}
}
