//Diagonal Traversal of a tree
import java.util.*;
class Node
{
	int data;
	Node left;
	Node right;
	Node(int data)
	{
		this.data=data;
		this.left=null;
		this.right=null;
	}
}
public class BinaryTree 
{
	Node root;
	public void diagonaltree(Node node)
	{
		Queue<Node> q = new LinkedList<>();
		q.add(node);
		while(!q.isEmpty())
		{
			Node temp = q.remove();
			while(temp!=null)
			{
				if(temp.left!=null)
				{
					q.add(temp.left);
				}
				System.out.print(temp.data+" ");
				temp=temp.right;
			}
		}
	}
	public static void main(String[] args) 
	{
		BinaryTree tree = new BinaryTree();
		tree.root = new Node(8); 
        tree.root.left = new Node(3); 
        tree.root.right = new Node(10); 
        tree.root.left.left = new Node(1);  
        tree.root.right.left = new Node(6); 
        tree.root.right.right = new Node(14); 
        tree.root.right.left.right = new Node(7); 
        tree.root.right.left.left = new Node(4);
        tree.diagonaltree(tree.root);
	}
}
