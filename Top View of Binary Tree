//Top View of Binary Tree
import java.util.*;
class Node 
{
	int data;
	Node left;
	Node right;
	Node(int data)
	{
		this.data=data;
		this.left=null;
		this.right=null;
	}
}
class object
{
	int hd;
	Node node;
	object(int hd,Node node)
	{
		this.node=node;
		this.hd=hd;
	}
}
public class BinaryTree 
{
	static Node root;
	static void topview(Node node1)
	{
		Queue<object> q = new LinkedList<>();
		TreeMap<Integer,Node> map = new TreeMap<>();
		q.add(new object(0,node1));
		while(!q.isEmpty())
		{
			object temp = q.remove();
			if(!map.containsKey(temp.hd))
				map.put(temp.hd,temp.node);
			if(temp.node.left!=null)
				q.add(new object(temp.hd-1,temp.node.left));
			if(temp.node.right!=null)
				q.add(new object(temp.hd+1,temp.node.right));
		}
		for(Map.Entry<Integer,Node> ans : map.entrySet())
		{
			System.out.println(ans.getValue().data);
		}
	}
	public static void main(String[] args) 
	{
		BinaryTree tree = new BinaryTree(); 
        tree.root = new Node(1); 
        tree.root.left = new Node(2); 
        tree.root.right = new Node(3); 
        tree.root.left.right = new Node(4); 
        tree.root.left.right.right = new Node(5); 
        tree.root.left.right.right.right = new Node(6); 
        System.out.println("Following are nodes in top view of Binary Tree");
        topview(root);
	}
}
