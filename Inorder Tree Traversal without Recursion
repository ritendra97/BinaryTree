//Inorder Tree Traversal without Recursion
import java.util.*;
class Node
{
	int data;
	Node left;
	Node right;
	Node(int data)
	{
		this.data=data;
		this.left=null;
		this.right=null;
	}
}
public class BinaryTreeProblem 
{
	Node root;
	public static void inorder(Node root)
	{
		Stack<Node> s = new Stack<>();
		
		Node current=root;
		
		while(current!=null || s.size()>0)
		{
			while(current!=null)
			{
				s.push(current);
				current=current.left;
			}
			current = s.pop();
			
			System.out.println(current.data);
			
			current=current.right;
		}
	}
	public static void main(String[] args) 
	{
		BinaryTreeProblem tree = new BinaryTreeProblem();
        tree.root = new Node(1);
        tree.root.left = new Node(2);
        tree.root.right = new Node(3);
        tree.root.left.left = new Node(4);
        tree.root.left.right = new Node(5);
        tree.inorder(tree.root);
	}
}
