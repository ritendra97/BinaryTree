//Morris Trraversal
import java.util.*;
class Node { 
	  
    int data; 
    Node left, right; 
  
    Node(int item) { 
        data = item; 
        left = right = null; 
    } 
} 
public class BinaryTree 
{
	static Node root;
	public static void morrisTraversal(Node node)
	{
		Node curr = node;
		while(curr!=null)
		{
			if(curr.left==null)
			{
				System.out.println(curr.data+" ");
				curr=curr.right;
			}
			else
			{
				Node predecessor = curr.left;
				while(predecessor.right!=null && predecessor.right!=curr)
				{
					predecessor=predecessor.right;
				}
				if(predecessor.right==null)
				{
					predecessor.right=curr;
					System.out.println(curr.data+" ");
					curr=curr.left;
				}
				else
				{	
					predecessor.right=null;
					curr=curr.right;
				}
			}
		}
	}
	public static void main(String[] args) 
	{
		root = new Node(25);  
        root.left = new Node(20);  
        root.right = new Node(30);  
        root.left.left = new Node(18);  
        root.left.right = new Node(22);  
        root.right.left = new Node(24);  
        root.right.right = new Node(32);
        morrisTraversal(root);
	}
}
