//Print all nodes that donâ€™t have sibling
import java.util.*;
class Node 
{
    int data;
    Node left, right;
 
    Node(int item) 
    {
        data = item;
        left = right = null;
    }
}
public class BinaryTree 
{
	Node root;
	void printSingles(Node node)
    {
		if(node==null)
			return;
		Queue<Node> q = new LinkedList<>();
		q.add(node);
		while(!q.isEmpty())
		{
			Node temp = q.remove();
			if(temp.left!=null && temp.right==null)
			{
				System.out.println(temp.left.data);
			}
			if(temp.right!=null && temp.left==null)
			{
				System.out.println(temp.right.data);
			}
			if(temp.left!=null)
				q.add(temp.left);
			if(temp.right!=null)
				q.add(temp.right);
		}
    }
	public static void main(String[] args) 
	{
		BinaryTree tree = new BinaryTree();
        tree.root = new Node(1);
        tree.root.left = new Node(2);
        tree.root.right = new Node(3);
        tree.root.left.right = new Node(4);
        tree.root.right.left = new Node(5);
        tree.root.right.left.right = new Node(6);
        tree.printSingles(tree.root);
	}
}
