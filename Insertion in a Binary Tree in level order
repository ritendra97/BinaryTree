//Insertion in a Binary Tree in level order
import java.util.*;
class Node
{
	int data;
	Node left;
	Node right;
	Node(int data)
	{
		this.data=data;
		this.left=null;
		this.right=null;
	}
}
public class BinaryTree 
{
	static Node root;
	static void insertion(Node root,int key)
	{
		Queue<Node> q = new LinkedList<>();
		q.add(root);
		while(!q.isEmpty())
		{
			Node temp = q.remove();
			if(temp.left==null)
			{
				temp.left=new Node(key);
				break;
			}
			else
			{
				q.add(temp.left);
			}
			if(temp.right==null)
			{
				temp.right=new Node(key);
				break;
			}
			else
			{
				q.add(temp.right);
			}
		}
	}
	static void inorder(Node temp)
    {
        if (temp == null)
            return;
 
        inorder(temp.left);
        System.out.print(temp.data + " ");
        inorder(temp.right);
    }
	public static void main(String[] args) 
	{
		root = new Node(10);
		root.left = new Node(11);
		root.right = new Node(9);
		root.left.left = new Node(7);
		root.right.left = new Node(15);
		root.right.right = new Node(8);
		System.out.print("Inorder traversal before insertion:");
		inorder(root);
		insertion(root,12);
		System.out.print("\nInorder traversal after insertion:");
	    inorder(root);
	}
}
