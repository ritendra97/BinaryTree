//Check if two trees are mirror
import java.util.*;
class Node
{
	int data;
	Node left;
	Node right;
	Node(int data)
	{
		this.data=data;
		this.left=null;
		this.right=null;
	}
}
public class BinaryTree 
{
	Node root1;
	Node root2;
	public boolean areMirror(Node a, Node b) 
	{
	    if(a==null && b==null)
	    	return true;
	    if (a == null || b == null)  
            return false; 
	    if(a.data==b.data)
	    	return areMirror(a.left,b.right) && areMirror(a.right,b.left);
	    return false;
	}
	public static void main(String[] args) 
	{
		BinaryTree tree =new BinaryTree();
		tree.root1 = new Node(1);
		tree.root1.left = new Node(2);
		tree.root1.right = new Node(3);
		tree.root2 = new Node(1);
		tree.root2.left = new Node(3);
		tree.root2.right = new Node(2);
		System.out.println(tree.areMirror(tree.root1,tree.root2));
	}
}
