//Maximum width of a binary tree
import java.util.*;
class Node
{
	int data;
	Node left;
	Node right;
	Node(int data)
	{
		this.data= data;
		this.left=null;
		this.right=null;
	}
}
public class BinaryTree 
{
	Node root;
	int max=Integer.MIN_VALUE;
	int getMaxWidth(Node root)
    {
        Queue<Node> q = new LinkedList<>();
        q.add(root);
        while(!q.isEmpty())
        {
        	int size = q.size();
        	if(max<size)
        		max=size;
        	while(size>0)
        	{
        		Node temp =q.remove();
        		if(temp.left!=null)
        			q.add(temp.left);
        		if(temp.right!=null)
        			q.add(temp.right);
        		size--;
        	}
        }
        return max;
    }
	public static void main(String[] args) 
	{
		BinaryTree tree =new BinaryTree();
		tree.root = new Node(80);
	    tree.root.left = new Node(20);
	    tree.root.right = new Node(40);
	    tree.root.left.left = new Node(10);
	    tree.root.left.right = new Node(5);
	    tree.root.right.right = new Node(10);
	    tree.root.right.left = new Node(10);
	    System.out.println(tree.getMaxWidth(tree.root));
	}
}
