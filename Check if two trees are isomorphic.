//Check if two trees are isomorphic.
import java.util.*;
class Node
{
	int data;
	Node left;
	Node right;
	Node(int data)
	{
		this.data=data;
		this.left=null;
		this.right=null;
	}
}
public class BinaryTree 
{
	boolean isIsomorphic(Node root1, Node root2)  
    { 
		if(root1==null && root2==null)
			return true;
		if(root1==null || root2==null)
			return false;
		if(root1.data!=root2.data)
			return false;
		if(root1.data==root2.data)
			return isIsomorphic(root1.left,root2.left) && isIsomorphic(root1.right,root2.right)
					||isIsomorphic(root1.right,root2.left) && isIsomorphic(root1.left,root2.right);
		return false;
    }
	public static void main(String[] args) 
	{
		BinaryTree a = new BinaryTree();

	    Node root1 = new Node(2);
	    root1.left = new Node(7);
	    root1.left.left = new Node(5);
	    root1.right = new Node(8);
	    
	    Node root2 = new Node(2);
	    root2.left = new Node(7);
	    root2.left.right = new Node(5);
	    root2.right = new Node(8);
	    System.out.println(a.isIsomorphic(root1,root2));
	}
}
